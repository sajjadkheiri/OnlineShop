@using Smartstore.Web.Models.Checkout

@model CheckoutConfirmModel

@{
    var cart = Model.ShoppingCart;
}

<input type="hidden" id="customercommenthidden" name="customercommenthidden" />
@Html.HiddenFor(x => x.SubscribeToNewsletter)
@Html.HiddenFor(x => x.AcceptThirdPartyEmailHandOver)

<div id="confirm-warnings" class="confirm-order">
    <div sm-if="Model.Warnings.Count > 0" class="alert alert-danger mb-3">
        <ul>
            @foreach (var warning in Model.Warnings)
            {
                <li>@Html.Raw(warning)</li>
            }
        </ul>
    </div>
</div>

<zone name="checkout_confirm_before_summary" />
<zone name="order_summary_content_before" />

@*INFO: OrderReviewData required for "Terminal with payment".*@
@if (Model.OrderReviewData != null)
{
    <partial name="OrderReviewData" model="Model.OrderReviewData" />
}

@if (cart.Items.Any())
{
    <div>
        <div class="row align-items-end mb-2">
            <div class="col">
                <span class="h5">
                    @Html.Raw(T("ShoppingCart.Products"))
                </span>
            </div>
            <div class="col col-auto">
                <a href="@Url.RouteUrl("ShoppingCart")" class="btn btn-secondary btn-sm">
                    <i class="fa fa-angle-left"></i>
                    <span>@T("ShoppingCart.EditCart")</span>
                </a>
            </div>
        </div>
        <div id="cart-warnings">
            <partial name="CartWarnings" model="cart.Warnings" />
        </div>
        <div id="cart-items" class="cart">
            <div class="cart-body">
                <partial name="CartItems" model="cart" />
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning fade show">
        @T("ShoppingCart.CartIsEmpty")
    </div>
}

<div sm-if="Model.ShowSecondBuyButtonBelowCart" class="bottom-order-total-container card card-body">
    <div class="row">
        <div class="col col-auto cart-buttons">
            <button type="button" class="btn btn-danger btn-lg @Model.NextStepClass" onclick="return false;">
                <span>@T("Checkout.ConfirmButton")</span>
                <i class="fa fa-angle-right"></i>
            </button>
        </div>
        <div class="col col-auto">
            <div>
                @await Component.InvokeAsync("OrderTotals", new { orderTotalOnly = true })
            </div>
        </div>
    </div>
</div>

<zone name="order_summary_content_after" />
